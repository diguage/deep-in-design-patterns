@startuml
title "**观察者模式**"

abstract class Subject {
  - observer :Observer
}
note top: Subject 类，它把所有对观察者对象的\n引用保存在一个聚集里，每个主题都可以\n有任何数量的观察者。抽象主题提供一个\n接口，可以增加和删除观察者对象。

abstract class Observer {
}
note top: Observer类，抽象观察者，为所有的\n具体观察者定义一个接口，在得到主题\n的通知时更新自己。

class ConcreteObserver {
  - subject :Subject
}
note bottom: ConcreteObserver 类，具体观察者，实现\n抽象观察者角色所要求的更新接口，以便\n使本身的状态与主题的状态相协调。

class ConcreteSubject {
}
note bottom: ConcreteSubject 类，具体主题，\n将有关状态存入具体观察者对象；\n在具体主题的内部状态改变时，\n给所有登记过的观察者发出通知。

Subject "-observer" o-right- Observer

Subject  <|-- ConcreteSubject
Observer <|-- ConcreteObserver

ConcreteObserver "-subject" o-left- ConcreteSubject

footer D瓜哥 · https://www.diguage.com · 出品
@enduml